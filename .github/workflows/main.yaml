name: Package
permissions:
  contents: write
  id-token: write
  packages: write
on:
  push:
    branches:
      - main
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
jobs:
  publish:
    name: Package
    if: ${{ ! contains(toJSON(github.event.commits.*.message), '[skip ci]') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Configure docker
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
      - name: Install build and tag requirements
        run: python -m pip install build semver
      - name: Get version bump
        id: get-tag
        run: echo "bump=$(python flows/docker.py bump)" >> $GITHUB_OUTPUT
      - name: Pull, build, tag, bump base image
        if: steps.get-tag.outputs.bump != ''
        run: python flows/docker.py pull --build --promote
      - name: Build image
        if: steps.get-tag.outputs.bump != ''
        run: python flows/docker.py build
      - name: Run tests against new image and save images
        if: steps.get-tag.outputs.bump != ''
        run: |
          python flows/docker.py test --push
          if ! test -f reports/.coverage; then
            echo "Missing test coverage reports (reports/.coverage). Not all tests have passed?"
            exit 1
          else
            echo "Test coverage report found!"
          fi
      - name: Build distribution
        run: python -m build
      - name: Publish package distributions to PyPI
        if: steps.get-tag.outputs.bump != ''
        uses: pypa/gh-action-pypi-publish@release/v1
      - name: Save git tag
        if: steps.get-tag.outputs.bump != ''
        run: git push origin ${{ steps.get-tag.outputs.bump }}
      - name: Copy and surgery coverage
        if: steps.get-tag.outputs.bump != ''
        run: |
          cp reports/.coverage .
          sqlite3 .coverage "update file set path='src/' || substr(path, 40);"
      - name: Post coverage comment
        if: steps.get-tag.outputs.bump != ''
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}
